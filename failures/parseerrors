&&;;
%%%%
Error in line 1, column 1:
&&;;
^
Expecting data-level type declaration, end of input, session type declaration, top level definition or top level process
%%%%

t:&&;;
t = ();;
%%%%
Error in line 1, column 3:
t:&&;; t = ();;
  ^
Expecting "forall" or data-level type
%%%%

t:forall && ;;
%%%%
Error in line 1, column 10:
t:forall && ;;
         ^
Expecting quantifier list (e.g., <a,'b,@c>)
%%%%

t:forall <&&> ;;
%%%%
Error in line 1, column 11:
t:forall <&&> ;;
          ^
Expecting ">" or quantifier
%%%%

t:forall <>. &&;;
%%%%
Error in line 1, column 14:
t:forall <>. &&;;
             ^
Expecting data-level type
%%%%

t:forall <'a>. &&;;
%%%%
Error in line 1, column 16:
t:forall <'a>. &&;;
               ^
Expecting data-level type
%%%%

t:{&&};;
%%%%
Error in line 1, column 4:
t:{&&};;
   ^
Expecting "}" or session type
%%%%

t:{(&&)};;
%%%%
Error in line 1, column 5:
t:{(&&)};;
    ^
Expecting session type
%%%%

t:{+{&&}};;
%%%%
Error in line 1, column 6:
t:{+{&&}};;
     ^
Expecting "}" or mapping from label to session type (e.g., foo:1)
%%%%

t:{&{&&}};;
%%%%
Error in line 1, column 6:
t:{&{&&}};;
     ^
Expecting "}" or mapping from label to session type (e.g., foo:1)
%%%%

t:{&{foo:1;&&}};;
%%%%
Error in line 1, column 12:
t:{&{foo:1;&&}};;
           ^
Expecting mapping from label to session type (e.g., foo:1)
%%%%

t:{&{&&;foo:1}};;
%%%%
Error in line 1, column 6:
t:{&{&&;foo:1}};;
     ^
Expecting "}" or mapping from label to session type (e.g., foo:1)
%%%%

t:{&{bar:&&;foo:1}};;
%%%%
Error in line 1, column 10:
t:{&{bar:&&;foo:1}};;
         ^
Expecting session type
%%%%

t:{ ! && };;
%%%%
Error in line 1, column 7:
t:{ ! && };;
      ^
Expecting session type
%%%%

t:{ @ && };;
%%%%
Error in line 1, column 7:
t:{ @ && };;
      ^
Expecting session type
%%%%

t:{ ' && };;
%%%%
Error in line 1, column 7:
t:{ ' && };;
      ^
Expecting session type
%%%%

t:{ forall && };;
%%%%
Error in line 1, column 12:
t:{ forall && };;
           ^
Expecting session type variable
%%%%

t:{ forall 'x && };;
%%%%
Error in line 1, column 15:
t:{ forall 'x && };;
              ^
Expecting "."
%%%%

t:{ forall 'x . && };;
%%%%
Error in line 1, column 17:
t:{ forall 'x . && };;
                ^
Expecting session type
%%%%

t:{ exists && };;
%%%%
Error in line 1, column 12:
t:{ exists && };;
           ^
Expecting session type variable
%%%%

t:{ exists 'x && };;
%%%%
Error in line 1, column 15:
t:{ exists 'x && };;
              ^
Expecting "."
%%%%

t:{ exists 'x . && };;
%%%%
Error in line 1, column 17:
t:{ exists 'x . && };;
                ^
Expecting session type
%%%%

t:{ 1 /\ && };;
%%%%
Error in line 1, column 7:
t:{ 1 /\ && };;
      ^
Expecting "*", "-o", "<-" or "}"
%%%%

t:{ {'a <- 'a} /\ && };;
%%%%
Error in line 1, column 5:
t:{ {'a <- 'a} /\ && };;
    ^
Expecting "}" or session type
%%%%

t:{ && * 1 };;
%%%%
Error in line 1, column 5:
t:{ && * 1 };;
    ^
Expecting "}" or session type
%%%%

t:{ ('a) * && };;
%%%%
Error in line 1, column 12:
t:{ ('a) * && };;
           ^
Expecting session type
%%%%

t:{ 'a * && };;
%%%%
Error in line 1, column 10:
t:{ 'a * && };;
         ^
Expecting session type
%%%%

t:{ && -o 1 };;
%%%%
Error in line 1, column 5:
t:{ && -o 1 };;
    ^
Expecting "}" or session type
%%%%

t:{ 'a -o && };;
%%%%
Error in line 1, column 11:
t:{ 'a -o && };;
          ^
Expecting session type
%%%%

t:{ && <- };;
%%%%
Error in line 1, column 5:
t:{ && <- };;
    ^
Expecting "}" or session type
%%%%

t:{ 1 <- && };;
%%%%
Error in line 1, column 10:
t:{ 1 <- && };;
         ^
Expecting session type
%%%%

t:{ 1 <- && ; 1 };;
%%%%
Error in line 1, column 10:
t:{ 1 <- && ; 1 };;
         ^
Expecting session type
%%%%

t:{ 1 <- 1 ; && };;
%%%%
Error in line 1, column 14:
t:{ 1 <- 1 ; && };;
             ^
Expecting session type
%%%%

t:{ 1 <-  };;
%%%%
Error in line 1, column 10:
t:{ 1 <- };;
         ^
Expecting session type
%%%%

t:{ <- && ; 1 };;
%%%%
Error in line 1, column 5:
t:{ <- && ; 1 };;
    ^
Expecting "}" or session type
%%%%

t:{ 1 -o 1 };;
%%%%
Error in line 2, column 1:

Expecting definition for t
%%%%

t:{ 1 };;
t = ;;
%%%%
Error in line 1, column 15:
t:{ 1 };; t = ;;
              ^
Expecting expression
%%%%

t:{ 1 };;
t && = 5;;
%%%%
Error in line 1, column 13:
t:{ 1 };; t && = 5;;
            ^
Expecting "=" or pattern variable
%%%%

'top <- &&;;
%%%%
Error in line 1, column 9:
'top <- &&;;
        ^
Expecting process
%%%%

&& <-
%%%%
Error in line 1, column 1:
&& <-
^
Expecting data-level type declaration, end of input, session type declaration, top level definition or top level process
%%%%

'top <- close 'c and && ;;
%%%%
Error in line 1, column 22:
'top <- close 'c and && ;;
                     ^
Expecting linear channel
%%%%

t1:Int;;
t1 = 5
and
&&
%%%%
Error in line 1, column 21:
t1:Int;; t1 = 5 and &&
                    ^
Expecting type signature
%%%%

t:Int;;
t = fun && -> 5;;
%%%%
Error in line 1, column 17:
t:Int;; t = fun && -> 5;;
                ^
Expecting pattern variable
%%%%

t:Int;;
'c <- t && -< 'd =
  close 'c;;
%%%%
Error in line 1, column 17:
t:Int;; 'c <- t && -< 'd = close 'c;;
                ^
Expecting "-<", "=" or pattern variable
%%%%

t:Int;;
t =
 let foo && : Int = 6
 in 8;;
%%%%
Error in line 1, column 21:
t:Int;; t = let foo && : Int = 6 in 8;;
                    ^
Expecting ":" or pattern variable
%%%%

t:Int;;
'c <- t = &&;;
%%%%
Error in line 1, column 19:
t:Int;; 'c <- t = &&;;
                  ^
Expecting process
%%%%

t:Int;;
'c <- t -< 'd = &&;;
%%%%
Error in line 1, column 25:
t:Int;; 'c <- t -< 'd = &&;;
                        ^
Expecting process
%%%%

t:Int;;
_ <- t = &&;;
%%%%
Error in line 1, column 18:
t:Int;; _ <- t = &&;;
                 ^
Expecting process
%%%%

t:Int;;
_ <- t -< 'd = &&;;
%%%%
Error in line 1, column 24:
t:Int;; _ <- t -< 'd = &&;;
                       ^
Expecting process
%%%%

t:Int;;
t=if && then 5 else 4;;
%%%%
Error in line 1, column 14:
t:Int;; t=if && then 5 else 4;;
             ^
Expecting expression
%%%%

t:Int;;
t=if 4^3 then && else 4;;
%%%%
Error in line 1, column 23:
t:Int;; t=if 4^3 then && else 4;;
                      ^
Expecting expression
%%%%

t:Int;;
t=if 4^6 then 5^6 else &&;;
%%%%
Error in line 1, column 32:
t:Int;; t=if 4^6 then 5^6 else &&;;
                               ^
Expecting expression
%%%%

t:Int;;
t=case && of 5;;
%%%%
Error in line 1, column 16:
t:Int;; t=case && of 5;;
               ^
Expecting expression
%%%%

t:Int;;
t=case 5^6 of | -o -> 6;;
%%%%
Error in line 1, column 25:
t:Int;; t=case 5^6 of | -o -> 6;;
                        ^
Expecting pattern match
%%%%

t:Int;;
t=case 5^6 of | True -> &&;;
%%%%
Error in line 1, column 33:
t:Int;; t=case 5^6 of | True -> &&;;
                                ^
Expecting expression
%%%%

t:Int;;
t=(&&,8^8);;
%%%%
Error in line 1, column 12:
t:Int;; t=(&&,8^8);;
           ^
Expecting expression
%%%%

t:Int;;
t=(8^8,&&);;
%%%%
Error in line 1, column 16:
t:Int;; t=(8^8,&&);;
               ^
Expecting expression
%%%%

t:Int;;
t=x<&&>;;
%%%%
Error in line 1, column 13:
t:Int;; t=x<&&>;;
            ^
Expecting ','-separated lists of types or '>'
%%%%

t:Int;;
t=x<&&,Int>;;
%%%%
Error in line 1, column 13:
t:Int;; t=x<&&,Int>;;
            ^
Expecting ','-separated lists of types or '>'
%%%%

t:Int;;
'c <- t =
  'c <- service Foo; 
  &&;;
%%%%
Error in line 1, column 38:
t:Int;; 'c <- t = 'c <- service Foo; &&;;
                                     ^
Expecting process statement
%%%%

t:Int;;
'c <- t =
  send 'c ('d <- &&);
  &&;;
%%%%
Error in line 1, column 34:
t:Int;; 'c <- t = send 'c ('d <- &&); &&;;
                                 ^
Expecting process
%%%%
